import sys
sys.setrecursionlimit(9000)
e=enumerate
G={(i,j):c for j,r in e(open(0))for i,c in e(r)if c!='#'}
W=(1,0),(-1,0),(0,1),(0,-1)
def v(c):
 if c>"u":return(0,1),
 if c>"=":return(1,0),
 return W
def C(A,p,n,d=1):
 while len(A[n])==2:p,n,d=n,[*{*A[n]}-{p}][0],d+1
 return n,d
def c(A,m):
 E={p:[]for p in G}
 for p in G:
  l=[]
  for n in A[p]:k,d=C(A,p,n) if m else(n,1);l+=(E[k],d),
  E[p].extend([l,0,p])
 return E
def S(N,D,s=[*G][-1]):
 if N[2]==s:return D
 N[1]=1;B=0
 for n,d in N[0]:
  if not n[1]:B=max(B,S(n,d+D))
 N[1]=0
 return B
f=[*G][0]
print(S(c({(x,y):[(x+X,y+Y)for X,Y in v(G[x,y])if(x+X,y+Y)in G]for x,y in G},0)[f],0),S(c({(x,y):[(x+X,y+Y)for X,Y in W if(x+X,y+Y)in G]for x,y in G},1)[f],0))